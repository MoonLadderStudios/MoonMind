services:
  ui:
    image: ghcr.io/open-webui/open-webui:main
    volumes:
      - open-webui:/app/backend/data
    ports:
      - 8080:8080
    environment:
      - OPENAI_API_BASE_URL=${OPENAI_API_BASE_URL:-http://api:8000/v1}
      - WEBUI_AUTH=${WEBUI_AUTH:-false}
      - ENABLE_OLLAMA_API=false
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - local-network
    depends_on:
      - api

  api:
    build:
      context: .
      dockerfile: ./api_service/Dockerfile
    image: ghcr.io/moonladderstudios/moonmind:latest
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=${LOG_LEVEL:-DEBUG}
      - PYTHONUNBUFFERED=1
      - FASTAPI_RELOAD=${FASTAPI_RELOAD:-false}
      - MODEL_CONTEXT_PROTOCOL_ENABLED=true
      - MODEL_CONTEXT_PROTOCOL_PORT=8000
      - MODEL_CONTEXT_PROTOCOL_HOST=0.0.0.0
      - QDRANT_URL=${QDRANT_URL:-http://qdrant:6333}
    env_file:
      - .env
    volumes:
      - ./model_data:/app/model_data
      - ./api_service:/app/api_service:ro
      - ./moonmind:/app/moonmind:ro
    command: >
      sh -c "
      if [ \"$FASTAPI_RELOAD\" = \"True\" ]; then
        uvicorn api_service.main:app --host 0.0.0.0 --port 8000 --reload --reload-dir /app/api_service --reload-dir /app/moonmind;
      else
        uvicorn api_service.main:app --host 0.0.0.0 --port 8000;
      fi"
    networks:
      - local-network
    labels:
      - "ai.model.context.protocol.version=0.1"
      - "ai.model.context.protocol.endpoint=/context"
    depends_on:
      - init-vector-db
      - postgres

  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-mydatabase}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres_init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - local-network
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:v1.14.1
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_storage:/qdrant/storage
    networks:
      - local-network

  init-vector-db:
    build:
      context: .
      dockerfile: ./api_service/Dockerfile
    image: ghcr.io/moonladderstudios/moonmind:latest
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
      - QDRANT_URL=${QDRANT_URL:-http://qdrant:6333}
    env_file:
      - .env
    volumes:
      - ./moonmind:/app/moonmind:ro
      - ./tools:/app/tools:ro
      - ./model_data:/app/model_data:ro
    command: >
      sh -c "
      if [ \"$INIT_DATABASE\" = \"true\" ]; then
        echo 'Attempting to initialize vector database...'
        export PYTHONPATH=/app && python /app/tools/init_vector_db.py;
      else
        echo 'INIT_DATABASE not set to true, skipping vector DB initialization.';
      fi"
    networks:
      - local-network
    restart: "no"

volumes:
  open-webui:
  qdrant_storage:
  postgres_data:

networks:
  local-network:
    external: true
