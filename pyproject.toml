[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "moonmind"
version = "0.1.0"
description = "MoonMind RAG application and supporting tools."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10,<3.14"
dependencies = [
    "fastapi>=0.115,<1.0",
    "uvicorn>=0.34,<1.0",
    "pydantic>=2.11,<3.0",
    "pydantic-settings>=2.9,<3.0",
    "langchain>=0.3,<1.0",
    "langchain-community>=0.3,<1.0",
    "langchain-google-community>=2.0,<3.0",
    "langchain-googledrive>=0.3,<1.0",
    "langchain-google-genai>=2.0,<3.0",
    "langchain-ollama>=0.3,<1.0",
    "langchain-openai>=0.3,<1.0",
    "langchain-qdrant>=0.2,<1.0",
    "langsmith>=0.3,<1.0",
    "llama-index>=0.12,<1.0",
    "llama-index-embeddings-google-genai>=0.2,<1.0",
    "llama-index-embeddings-ollama>=0.6,<1.0",
    "llama-index-readers-confluence>=0.3,<1.0",
    "llama-index-readers-github>=0.6,<1.0",
    "llama-index-readers-google>=0.6,<1.0",
    "llama-index-readers-jira>=0.4,<1.0",
    "llama-index-vector-stores-qdrant>=0.6,<1.0",
    "qdrant-client>=1.14,<2.0",
    "PyGithub>=1.59,<2.0",
    "google-generativeai>=0.8,<1.0",
    "openai>=1.86,<2.0",
    "ollama>=0.5,<1.0",
    "anthropic>=0.25.0,<1.0", # Added anthropic
    "llama-index-llms-anthropic>=0.1.7,<1.0", # Added llama-index-llms-anthropic
    "httpx>=0.28,<1.0",
    "atlassian-python-api>=3.41,<4.0",
    "beautifulsoup4>=4.13,<5.0",
    "html2text>=2024.2,<2025.0",
    "lxml>=5.4,<6.0",
    "datasets>=3.6,<4.0",
    "pytest>=8.4,<9.0",
    "pytest-mock>=3.14,<4.0",
    "pytesseract>=0.3,<1.0",
    "requests>=2.32,<3.0",
    "PyYAML>=6.0.1",
    "asyncpg>=0.29.0,<0.30.0",
    "SQLAlchemy>=2.0.0,<2.1.0",
    "fastapi-users[sqlalchemy]>=13.0.0,<14.0.0",
    "pytest>=8.4,<9.0",
    "pytest-asyncio>=0.23.0,<0.24.0",
    "alembic>=1.13.0,<2.0.0"
]

# This tells setuptools where to find packages when building.
# For an editable install (`pip install -e .`), it helps ensure that
# Python's import system can find these packages from the project root.
[tool.setuptools.packages.find]
where = ["."]  # Search for packages in the current directory (project root)
include = ["moonmind*"]  # Include 'moonmind' and its sub-packages
exclude = ["tests*", "tools*"] # Exclude tests and tools from being top-level packages
