[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "moonmind-project"
version = "0.1.0"
description = "MoonMind RAG application and supporting tools."
readme = "README.md"
license = { file = "LICENSE" }
dependencies = [
    "fastapi",
    "uvicorn",
    "pydantic",
    "pydantic-settings",
    "langchain",
    "langchain-community",
    "langchain-google-community",
    "langchain-google-genai",
    "langchain-ollama",
    "langchain-openai",
    "langchain-qdrant",
    "langsmith",
    "llama-index",
    "llama-index-embeddings-google-genai",
    "llama-index-embeddings-ollama",
    "llama-index-readers-confluence",
    "llama-index-readers-github",
    "llama-index-readers-google",
    "llama-index-readers-jira",
    "llama-index-vector-stores-qdrant",
    "qdrant-client",
    "google-generativeai",
    "openai",
    "ollama",
    "httpx",
    "atlassian-python-api",
    "beautifulsoup4",
    "html2text",
    "lxml",
    "datasets",
    "pytest",
    "pytest-mock",
    "pytesseract",
    "requests",
    "PyYAML>=6.0.1"
]

# This tells setuptools where to find packages when building.
# For an editable install (`pip install -e .`), it helps ensure that
# Python's import system can find these packages from the project root.
[tool.setuptools.packages.find]
where = ["."]  # Search for packages in the current directory (project root)
include = ["moonmind*"]  # Include 'moonmind' and its sub-packages
exclude = ["tests*", "scripts*"] # Exclude tests and scripts from being top-level packages
